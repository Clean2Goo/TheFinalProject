<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/data/jpa
           https://www.springframework.org/schema/data/jpa/spring-jpa.xsd
           http://www.springframework.org/schema/tx
           https://www.springframework.org/schema/tx/spring-tx.xsd
       ">

    <!-- 1) 컴포넌트 스캔 -->
    <context:component-scan base-package="com.mySpring.myapp" />
    <jpa:repositories base-package="com.mySpring.myapp.reviews.repository" />
	
    <!-- 2) JPA 리포지토리 스캔 -->
    <jpa:repositories base-package="com.mySpring.myapp.carwash.repository" />

    <!-- 3) DataSource 설정 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@175.126.145.185:1521:orcl" />
        <property name="username" value="java26_3" />
        <property name="password" value="1234" />
    </bean>

    <!-- 4) 엔티티 매니저 팩토리 -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!-- DB 연결 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 엔티티 클래스가 위치한 패키지 -->
        <property name="packagesToScan" value="com.mySpring.myapp.carwash.model, com.mySpring.myapp.reviews.model" />

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- 콘솔에 SQL 표시 -->
                <property name="showSql" value="true" />
                <!-- Hibernate가 DDL을 자동 생성/업데이트 (개발 단계용) -->
                <property name="generateDdl" value="true" />
            </bean>
        </property>

        <!-- Dialect, 등 추가 JPA 설정 -->
        <property name="jpaProperties">
            <props>
                <!-- Oracle 11g → Oracle10gDialect 사용 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
                <!-- 아래는 선택적인 설정 -->
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />

    <!-- 5) 트랜잭션 매니저 등록 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- 6) @Transactional 애노테이션 활성화 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 7) application.properties 읽기 추가 -->
    <context:property-placeholder location="classpath:application.properties" file-encoding="UTF-8" />

</beans>
